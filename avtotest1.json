{
	"info": {
		"_postman_id": "43634bcf-f207-4191-a2a7-71c5e5569a28",
		"name": "Starwars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26279794"
	},
	"item": [
		{
			"name": "People #10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.films[1]).to.string('https://swapi.py4e.com/api/films/2/');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}api/people/10",
					"host": [
						"{{host}}api"
					],
					"path": [
						"people",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Planeta #7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status('OK');\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"temperate\");\r",
							"});\r",
							"});\r",
							"pm.test(\"Response should contain name, diameter, and terrain\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Endor\");\r",
							"    pm.expect(jsonData.diameter).to.eql(\"4900\");\r",
							"    pm.expect(jsonData.terrain).to.eql(\"forests, mountains, lakes\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}api/planets/7",
					"host": [
						"{{host}}api"
					],
					"path": [
						"planets",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Starship #5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен включать name, model, and crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Sentinel-class landing craft\");\r",
							"    pm.expect(jsonData.model).to.eql(\"Sentinel-class landing craft\");\r",
							"    pm.expect(jsonData.crew).to.eql(\"5\");\r",
							"});\r",
							"pm.test(\"В body строка\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Sienar Fleet Systems, Cyngus Spaceworks\");\r",
							"});\r",
							"pm.test(\"Ответ не меньше чем за 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}api/starships/5",
					"host": [
						"{{host}}api"
					],
					"path": [
						"starships",
						"5"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://swapi.py4e.com/",
			"type": "string"
		}
	]
}